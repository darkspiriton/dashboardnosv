{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nangular.module('App', ['ngResource', 'ngMessages', 'ngSanitize', 'ngAnimate', 'toastr', 'ui.router', 'satellizer', 'angular-fb']).config([\"$stateProvider\", \"$urlRouterProvider\", \"$authProvider\", \"$fbProvider\", \"$locationProvider\", function ($stateProvider, $urlRouterProvider, $authProvider, $fbProvider, $locationProvider) {\n    $authProvider.tokenName = \"token\";\n    $authProvider.tokenPrefix = \"DB_NV\";\n\n    $fbProvider.appId = 1148473048525783;\n    $fbProvider.extendPermissions = 'publish_actions,,user_photos';\n\n    $stateProvider.state('Home', {\n        url: '/home',\n        templateUrl: 'app/partials/efecto.html',\n        controller: 'homeCtrl'\n    });\n\n    $urlRouterProvider.otherwise('/home');\n    // $locationProvider.html5Mode(true);\n}]).directive('fileModel', function () {\n    return {\n        controller: function controller($parse, $element, $attrs, $scope) {\n            var exp = $parse($attrs.fileModel);\n            $element.on('change', function () {\n                exp.assign($scope, this.files);\n                $scope.$apply();\n            });\n        }\n    };\n}).factory('color', function () {\n    var colors = ['#F44336', '#03A9F4', '#8BC34A', '#009688', '#E91E63', '#FF9800', '#00BCD4', '#FFEB3B', '#9C27B0', '#673AB7', '#3F51B5', '#4CAF50'];\n    var get = function get(i) {\n        i = i || 0;\n        i = i > 11 ? i - 12 : i;\n        return colors[i];\n    };\n\n    return {\n        get: get\n    };\n}).factory('chart', ['color', function (color) {\n    var dataChart = function dataChart(data, config, callback) {\n        var dataChart = [];\n        for (var i in data) {\n            var temp = {};\n            for (var y in config) {\n                temp[y] = data[i][config[y]];\n            }\n            dataChart.push(temp);\n        }\n        callback(dataChart);\n    };\n    var dataColumn = function dataColumn(data, days, callback) {\n        var barData = [];\n        for (var y = 0; y < data.length; y++) {\n            var temp = [];\n            for (var i = 1; i <= days; i++) {\n                temp.push([i, 0]);\n            }\n            for (var d in data[y].data) {\n                for (var x = 0; x < temp.length; x++) {\n                    if (temp[x][0] == data[y].data[d].fecha) {\n                        temp[x][1] = data[y].data[d].quantity;\n                    }\n                }\n            }\n            barData.push({\n                data: temp,\n                label: data[y].name,\n                bars: {\n                    show: true,\n                    barWidth: 0.1,\n                    order: y + 1,\n                    lineWidth: 0\n                }\n            });\n        }\n        callback(barData);\n    };\n    var chart = function chart(data, config) {\n        dataChart(data, config, function (pieData) {\n            $.plot('#pie-chart', pieData, {\n                series: {\n                    pie: {\n                        innerRadius: 0.5,\n                        show: true,\n                        stroke: {\n                            width: 4\n                        }\n                    }\n                },\n                legend: {\n                    container: '.flc-pie',\n                    backgroundOpacity: 0.7,\n                    noColumns: 0,\n                    backgroundColor: \"white\",\n                    lineWidth: 0\n                },\n                grid: {\n                    hoverable: true,\n                    clickable: true\n                },\n                tooltip: true,\n                tooltipOpts: {\n                    content: \"%p.0%, %s\", // show percentages, rounding to 2 decimal places\n                    shifts: {\n                        x: 20,\n                        y: -10\n                    },\n                    defaultTheme: false,\n                    cssClass: 'flot-tooltip'\n                }\n            });\n        });\n    };\n\n    var column = function column(data, days) {\n        dataColumn(data, days, function (Data) {\n            if ($('#bar-chart')[0]) {\n                $.plot($(\"#bar-chart\"), Data, {\n                    grid: {\n                        borderWidth: 1,\n                        borderColor: '#eee',\n                        show: true,\n                        hoverable: true,\n                        clickable: true\n                    },\n\n                    yaxis: {\n                        tickColor: '#eee',\n                        tickDecimals: 0,\n                        font: {\n                            lineHeight: 13,\n                            style: \"normal\",\n                            color: \"#9f9f9f\"\n                        },\n                        shadowSize: 0\n                    },\n\n                    xaxis: {\n                        tickColor: '#fff',\n                        tickDecimals: 0,\n                        font: {\n                            lineHeight: 13,\n                            style: \"normal\",\n                            color: \"#9f9f9f\"\n                        },\n                        shadowSize: 0\n                    },\n\n                    legend: {\n                        container: '.flc-bar',\n                        backgroundOpacity: 0.5,\n                        noColumns: 0,\n                        backgroundColor: \"white\",\n                        lineWidth: 0\n                    },\n                    'bars': {\n                        show: true,\n                        fill: 0.7,\n                        lineWidth: 1\n                    },\n                    colors: ['#F44336', '#03A9F4', '#8BC34A', '#009688', '#E91E63', '#FF9800', '#00BCD4', '#FFEB3B', '#9C27B0', '#673AB7', '#3F51B5', '#4CAF50']\n                });\n            }\n            /* Tooltips for Flot Charts */\n\n            if ($(\".flot-chart\")[0]) {\n                $(\".flot-chart\").bind(\"plothover\", function (event, pos, item) {\n                    if (item) {\n                        var x = item.datapoint[0].toFixed(0),\n                            y = item.datapoint[1].toFixed(0);\n                        //$(\".flot-tooltip\").html(item.series.label + \" para el dia \" + x + \" tienes \" + y + \" ventas\").css({top: item.pageY+5, left: item.pageX+5}).show();\n                        $(\".flot-tooltip\").html(item.series.label + \" - \" + y + \" movimiento(s)\").css({ top: item.pageY + 5, left: item.pageX + 5 }).show();\n                    } else {\n                        $(\".flot-tooltip\").hide();\n                    }\n                });\n\n                $(\"<div class='flot-tooltip' class='chart-tooltip'></div>\").appendTo(\"body\");\n            }\n        });\n    };\n\n    return {\n        draw: chart,\n        drawColummn: column\n    };\n}]).factory('charts', function () {\n    var chart, element;\n\n    function make(element, type, data, options) {\n        element = document.getElementById(element);\n        chart = new Chart(element, {\n            type: type || \"line\",\n            data: data || {},\n            options: options || {}\n        });\n\n        return chart;\n    }\n\n    return {\n        make: make\n    };\n}).factory('toformData', function () {\n    var dataFile = function dataFile(data) {\n        if (undefined === data) return data;\n        var formData = new FormData();\n        angular.forEach(data, function (value, key) {\n            if (value instanceof FileList) {\n                if (value.length === 1) formData.append(key, value[0]);else {\n                    angular.forEach(value, function (file, index) {\n                        formData.append(key + '_' + index, file);\n                    });\n                }\n            } else if (value instanceof Array) {\n                formData.append(key, angular.toJson(value));\n            } else {\n                formData.append(key, value);\n            }\n        });\n        return formData;\n    };\n\n    return {\n        dataFile: dataFile\n    };\n}).factory('petition', [\"$http\", \"$location\", \"$q\", function ($http, $location, $q) {\n    var baseUrl = function baseUrl(URL) {\n        var prot = $location.protocol();\n        var host = $location.host();\n        return prot + '://' + host + '/' + URL;\n    };\n\n    return {\n\n        get: function get(URL, data) {\n            data = data || {};\n            var deferred = $q.defer();\n            $http.get(baseUrl(URL), data).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (error) {\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        },\n        post: function post(URL, data, config) {\n            data = data || {};\n            config = config || {};\n            var deferred = $q.defer();\n            $http.post(baseUrl(URL), data, config).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (error) {\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        },\n        put: function put(URL, data) {\n            data = data || {};\n            var deferred = $q.defer();\n            $http.put(baseUrl(URL), data).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (error) {\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        },\n        delete: function _delete(URL, data) {\n            data = data || {};\n            var deferred = $q.defer();\n            $http.delete(baseUrl(URL), data).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (error) {\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        },\n        custom: function custom(config) {\n            var deferred = $q.defer();\n            $http(config).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (error) {\n                deferred.reject(error);\n            });\n            return deferred.promise;\n        }\n    };\n}]).factory('storage', ['$window', '$log', '$auth', function ($window, $log, $auth) {\n    var storageType = 'localStorage';\n    var roleName = 'roleName';\n    var userName = 'fullName';\n    var routeName = 'routesList';\n\n    return {\n        get: function get(key) {\n            return $window[storageType].getItem(key);\n        },\n        set: function set(key, value) {\n            return $window[storageType].setItem(key, value);\n        },\n        remove: function remove(key) {\n            return $window[storageType].removeItem(key);\n        },\n        removeStorage: function removeStorage() {\n            $auth.removeToken();\n            $window[storageType].removeItem(roleName);\n            $window[storageType].removeItem(userName);\n            $window[storageType].removeItem(routeName);\n        }\n    };\n}]).factory('util', [\"$location\", function ($location) {\n    return {\n        liPage: function liPage(name) {\n            $('li.active').removeClass('active');\n            $('li#' + name).addClass('active');\n        },\n        muestraformulario: function muestraformulario() {\n            $('#formulariohide').fadeIn('fast');\n            $('html, body').stop().animate({\n                scrollTop: $('#formulariohide').offset().top - 100\n            }, 1000);\n        },\n        ocultaformulario: function ocultaformulario() {\n            $('#formulariohide').fadeOut('fast');\n            $(\"body\").animate({\n                scrollTop: 0\n            }, 1000);\n        },\n        modal: function modal(id) {\n            id = id || 'Modal';\n            $('#' + id).modal('show');\n        },\n        modalClose: function modalClose(id) {\n            id = id || 'Modal';\n            $('#' + id).modal('hide');\n        },\n        baseUrl: function baseUrl(URL) {\n            var prot = $location.protocol();\n            var host = $location.host();\n            return prot + '://' + host + '/' + URL;\n        },\n        resetTable: function resetTable(scope, compile, table) {\n            table = table || '#table';\n            scope.tableData = [];\n            $(table).AJQtable('view', scope, compile);\n        },\n        setDate: function setDate(date) {\n            var datestring = \"\";\n            date = new Date(date);\n            var day = date.getDate();\n            day = day.toString().length == 1 ? '0' + day.toString() : day;\n            var month = date.getMonth() + 1;\n            month = month.toString().length == 1 ? '0' + month.toString() : month;\n            var year = date.getFullYear();\n            return datestring.concat(' ', day, '-', month, '-', year);\n        }\n    };\n}]).controller('appCtrl', function AppCtrl($state, $log, $scope, $window, $auth, storage) {\n    $scope.pageTitle = 'Home';\n\n    if ($auth.isAuthenticated()) {\n        $scope.logout = function () {\n            storage.removeStorage();\n            $window.location.href = \"/\";\n        };\n\n        var role = storage.get('roleName');\n        var name = storage.get('fullName');\n\n        if (!role || !name) $scope.logout();\n\n        $scope.userInfo = {\n            role: role,\n            name: name\n        };\n\n        $scope.$on('$stateChangeSuccess', function (event, toState) {\n            if (angular.isDefined(toState.name)) {\n                $scope.pageTitle = toState.name + ' | NosVenden';\n            }\n        });\n    } else {\n        $window.location.href = '/';\n    }\n});\n\n},{}]},{},[1]);\n"],"file":"app.js","sourceRoot":"/source/"}