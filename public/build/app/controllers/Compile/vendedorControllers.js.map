{"version":3,"sources":["homeCtrl.js","auxProductVENCtrl.js"],"names":[],"mappingsrVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vendedorControllers.js","sourcesContent":["angular.module('App')\r\n    .controller('homeCtrl',[\"util\", function(util) {\r\n\r\n        util.liPage('home');\r\n\r\n        function Vector(x, y, z) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.z = z;\r\n\r\n            this.set = function (x, y) {\r\n                this.x = x;\r\n                this.y = y;\r\n            };\r\n        }\r\n\r\n        function PointCollection() {\r\n            this.mousePos = new Vector(0, 0);\r\n            this.pointCollectionX = 0;\r\n            this.pointCollectionY = 0;\r\n            this.points = [];\r\n\r\n            this.update = function () {\r\n                for (var i = 0; i < this.points.length; i++) {\r\n                    var point = this.points[i];\r\n\r\n                    var dx = this.mousePos.x - point.curPos.x;\r\n                    var dy = this.mousePos.y - point.curPos.y;\r\n                    var dd = (dx * dx) + (dy * dy);\r\n                    var d = Math.sqrt(dd);\r\n\r\n                    point.targetPos.x = d < 150 ? point.curPos.x - dx : point.originalPos.x;\r\n                    point.targetPos.y = d < 150 ? point.curPos.y - dy : point.originalPos.y;\r\n\r\n                    point.update();\r\n                }\r\n            };\r\n\r\n            this.shake = function () {\r\n                var randomNum = Math.floor(Math.random() * 5) - 2;\r\n\r\n                for (var i = 0; i < this.points.length; i++) {\r\n                    var point = this.points[i];\r\n                    var dx = this.mousePos.x - point.curPos.x;\r\n                    var dy = this.mousePos.y - point.curPos.y;\r\n                    var dd = (dx * dx) + (dy * dy);\r\n                    var d = Math.sqrt(dd);\r\n                    if (d < 50) {\r\n                        this.pointCollectionX = Math.floor(Math.random() * 5) - 2;\r\n                        this.pointCollectionY = Math.floor(Math.random() * 5) - 2;\r\n                    }\r\n                    point.draw(bubbleShape, this.pointCollectionX, this.pointCollectionY);\r\n                }\r\n            };\r\n\r\n            this.draw = function (bubbleShape, reset) {\r\n                for (var i = 0; i < this.points.length; i++) {\r\n                    var point = this.points[i];\r\n\r\n                    if (point === null)\r\n                        continue;\r\n\r\n                    if (window.reset) {\r\n                        this.pointCollectionX = 0;\r\n                        this.pointCollectionY = 0;\r\n                        this.mousePos = new Vector(0, 0);\r\n                    }\r\n\r\n                    point.draw(bubbleShape, this.pointCollectionX, this.pointCollectionY, reset);\r\n                }\r\n            };\r\n\r\n            this.reset = function (bubbleShape) {};\r\n        }\r\n\r\n        function Point(x, y, z, size, color) {\r\n            this.curPos = new Vector(x, y, z);\r\n            this.color = color;\r\n\r\n            this.friction = document.Friction;\r\n            this.rotationForce = document.rotationForce;\r\n            this.springStrength = 0.1;\r\n\r\n            this.originalPos = new Vector(x, y, z);\r\n            this.radius = size;\r\n            this.size = size;\r\n            this.targetPos = new Vector(x, y, z);\r\n            this.velocity = new Vector(0.0, 0.0, 0.0);\r\n\r\n            this.update = function () {\r\n                var dx = this.targetPos.x - this.curPos.x;\r\n                var dy = this.targetPos.y - this.curPos.y;\r\n                // Orthogonal vector is [-dy,dx]\r\n                var ax = dx * this.springStrength - this.rotationForce * dy;\r\n                var ay = dy * this.springStrength + this.rotationForce * dx;\r\n\r\n                this.velocity.x += ax;\r\n                this.velocity.x *= this.friction;\r\n                this.curPos.x += this.velocity.x;\r\n\r\n                this.velocity.y += ay;\r\n                this.velocity.y *= this.friction;\r\n                this.curPos.y += this.velocity.y;\r\n\r\n                var dox = this.originalPos.x - this.curPos.x;\r\n                var doy = this.originalPos.y - this.curPos.y;\r\n                var dd = (dox * dox) + (doy * doy);\r\n                var d = Math.sqrt(dd);\r\n\r\n                this.targetPos.z = d / 100 + 1;\r\n                var dz = this.targetPos.z - this.curPos.z;\r\n                var az = dz * this.springStrength;\r\n                this.velocity.z += az;\r\n                this.velocity.z *= this.friction;\r\n                this.curPos.z += this.velocity.z;\r\n\r\n                this.radius = this.size * this.curPos.z;\r\n                if (this.radius < 1) this.radius = 1;\r\n            };\r\n\r\n            this.draw = function (bubbleShape, dx, dy) {\r\n                ctx.fillStyle = this.color;\r\n                if (bubbleShape == \"square\") {\r\n                    ctx.beginPath();\r\n                    ctx.fillRect(this.curPos.x + dx, this.curPos.y + dy, this.radius * 1.5, this.radius * 1.5);\r\n                } else {\r\n                    ctx.beginPath();\r\n                    ctx.arc(this.curPos.x + dx, this.curPos.y + dy, this.radius, 0, Math.PI * 2, true);\r\n                    ctx.fill();\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeColor(hslList, fade) {\r\n            var hue = hslList[0] /*- 17.0 * fade / 1000.0*/ ;\r\n            var sat = hslList[1] /*+ 81.0 * fade / 1000.0*/ ;\r\n            var lgt = hslList[2] /*+ 58.0 * fade / 1000.0*/ ;\r\n            return \"hsl(\" + hue + \",\" + sat + \"%,\" + lgt + \"%)\";\r\n        }\r\n\r\n        function phraseToHex(phrase) {\r\n            var hexphrase = \"\";\r\n            for (var i = 0; i < phrase.length; i++) {\r\n                hexphrase += phrase.charCodeAt(i).toString(16);\r\n            }\r\n            return hexphrase;\r\n        }\r\n\r\n        function initEventListeners() {\r\n            $(window).bind('resize', updateCanvasDimensions).bind('mousemove', onMove);\r\n\r\n            canvas.ontouchmove = function (e) {\r\n                e.preventDefault();\r\n                onTouchMove(e);\r\n            };\r\n\r\n            canvas.ontouchstart = function (e) {\r\n                e.preventDefault();\r\n            };\r\n        }\r\n\r\n        function updateCanvasDimensions() {\r\n            canvas.attr({\r\n                height: 500,\r\n                width: 1000\r\n            });\r\n            canvasWidth = canvas.width();\r\n            canvasHeight = canvas.height();\r\n            draw();\r\n        }\r\n\r\n        function onMove(e) {\r\n            if (pointCollection) {\r\n                pointCollection.mousePos.set(e.pageX - canvas.offset().left, e.pageY - canvas.offset().top);\r\n            }\r\n        }\r\n\r\n        function onTouchMove(e) {\r\n            if (pointCollection) {\r\n                pointCollection.mousePos.set(e.targetTouches[0].pageX - canvas.offset().left, e.targetTouches[0].pageY - canvas.offset().top);\r\n            }\r\n        }\r\n\r\n        function bounceName() {\r\n            shake();\r\n            setTimeout(bounceName, 30);\r\n        }\r\n\r\n        function bounceBubbles() {\r\n            draw();\r\n            update();\r\n            setTimeout(bounceBubbles, 30);\r\n        }\r\n\r\n        function draw(reset) {\r\n            var tmpCanvas = canvas.get(0);\r\n\r\n            if (tmpCanvas.getContext === null) {\r\n                return;\r\n            }\r\n\r\n            ctx = tmpCanvas.getContext('2d');\r\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n            bubbleShape = typeof bubbleShape !== 'undefined' ? bubbleShape : \"circle\";\r\n\r\n            if (pointCollection) {\r\n                pointCollection.draw(bubbleShape, reset);\r\n            }\r\n        }\r\n\r\n        function shake() {\r\n            var tmpCanvas = canvas.get(0);\r\n\r\n            if (tmpCanvas.getContext === null) {\r\n                return;\r\n            }\r\n\r\n            ctx = tmpCanvas.getContext('2d');\r\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n            bubbleShape = typeof bubbleShape !== 'undefined' ? bubbleShape : \"circle\";\r\n\r\n            if (pointCollection) {\r\n                pointCollection.shake(bubbleShape);\r\n            }\r\n        }\r\n\r\n        function update() {\r\n            if (pointCollection)\r\n                pointCollection.update();\r\n        }\r\n\r\n        function drawName(name, letterColors) {\r\n            updateCanvasDimensions();\r\n            var g = [];\r\n            var offset = 0;\r\n\r\n            function addLetter(cc_hex, ix, letterCols) {\r\n                if (typeof letterCols !== 'undefined') {\r\n                    if (Object.prototype.toString.call(letterCols) === '[object Array]' && Object.prototype.toString.call(letterCols[0]) === '[object Array]') {\r\n                        letterColors = letterCols;\r\n                    }\r\n                    if (Object.prototype.toString.call(letterCols) === '[object Array]' && typeof letterCols[0] === \"number\") {\r\n                        letterColors = [letterCols];\r\n                    }\r\n                } else {\r\n                    // if undefined set black\r\n                    letterColors = [[0, 0, 27]];\r\n                }\r\n\r\n                if (document.alphabet.hasOwnProperty(cc_hex)) {\r\n                    var chr_data = document.alphabet[cc_hex].P;\r\n                    var bc = letterColors[ix % letterColors.length];\r\n\r\n                    for (var i = 0; i < chr_data.length; ++i) {\r\n                        point = chr_data[i];\r\n\r\n                        g.push(new Point(point[0] + offset,\r\n                            point[1],\r\n                            0.0,\r\n                            point[2],\r\n                            makeColor(bc, point[3])));\r\n                    }\r\n                    offset += document.alphabet[cc_hex].W;\r\n                }\r\n            }\r\n\r\n            var hexphrase = phraseToHex(name);\r\n\r\n            var col_ix = -1;\r\n            for (var i = 0; i < hexphrase.length; i += 2) {\r\n                var cc_hex = \"A\" + hexphrase.charAt(i) + hexphrase.charAt(i + 1);\r\n                if (cc_hex != \"A20\") {\r\n                    col_ix++;\r\n                }\r\n                addLetter(cc_hex, col_ix, letterColors);\r\n            }\r\n\r\n            for (var j = 0; j < g.length; j++) {\r\n                g[j].curPos.x = (canvasWidth / 2 - offset / 2) + g[j].curPos.x;\r\n                g[j].curPos.y = (canvasHeight / 2 - 105) + g[j].curPos.y;\r\n                g[j].originalPos.x = (canvasWidth / 2 - offset / 2) + g[j].originalPos.x;\r\n                g[j].originalPos.y = (canvasHeight / 2 - 105) + g[j].originalPos.y;\r\n            }\r\n\r\n            pointCollection = new PointCollection();\r\n            pointCollection.points = g;\r\n            initEventListeners();\r\n        }\r\n\r\n        window.reset = false;\r\n\r\n        $(window).mouseleave(function () {\r\n            window.reset = true;\r\n        });\r\n\r\n        $(window).mouseenter(function () {\r\n            window.reset = false;\r\n        });\r\n\r\n        var canvas = $(\"#myCanvas\");\r\n        var canvasHeight;\r\n        var canvasWidth;\r\n        var ctx;\r\n        var pointCollection;\r\n\r\n        document.rotationForce = 0.0;\r\n        document.Friction = 0.85;\r\n\r\n        var white = [0, 0, 100];\r\n        var black = [0, 0, 27];\r\n        var red = [0, 100, 63];\r\n        var orange = [40, 100, 60];\r\n        var green = [75, 100, 40];\r\n        var blue = [196, 77, 55];\r\n        var purple = [280, 50, 60];\r\n\r\n        setTimeout(updateCanvasDimensions, 30);\r\n\r\n        var myName = \"NosVenden\";\r\n\r\n        var red = [0, 100, 63];\r\n        var orange = [40, 100, 60];\r\n        var green = [75, 100, 40];\r\n        var blue = [196, 77, 55];\r\n        var purple = [280, 50, 60];\r\n        var letterColors = [red, orange, green, blue, purple];\r\n\r\n        drawName(myName, letterColors);\r\n\r\n        if(10 < 3)\r\n        {\r\n            bubbleShape = 'square';\r\n        }\r\n        else\r\n        {\r\n            bubbleShape = 'circle';\r\n        }\r\n\r\n        bounceBubbles();\r\n    }]);","angular.module('App')\r\n    .config([\"$stateProvider\", function($stateProvider) {\r\n        $stateProvider\r\n            .state('Productos Ventas', {\r\n                url: '/Vista-general-de-productos-KARDEX',\r\n                templateUrl: 'app/partials/auxProductVEN.html',\r\n                controller : 'productsVENCtrl'\r\n            });\r\n    }])\r\n    .controller('productsVENCtrl', [\"$scope\", \"$compile\", \"$state\", \"$log\", \"util\", \"petition\", \"toastr\",\r\n        function($scope, $compile, $state, $log, util, petition, toastr){\r\n\r\n        util.liPage('productsJVE');\r\n\r\n        $scope.tableConfig \t= \t{\r\n            columns :\t[\r\n                {\"sTitle\": \"Fecha\", \"bSortable\" : true, 'sWidth': '100px'},\r\n                {\"sTitle\": \"Codigo\", \"bSortable\" : true, 'sWidth': '1px'},\r\n                {\"sTitle\": \"Nombre\", \"bSortable\" : true, 'sWidth': '250px'},\r\n                {\"sTitle\": \"Proveedor\", \"bSortable\" : true},\r\n                {\"sTitle\": \"Talla\", \"bSortable\" : true},\r\n                {\"sTitle\": \"Color\", \"bSortable\" : true, \"bSearchable\": true},\r\n                {\"sTitle\": \"Tipos\", \"bSortable\" : true, \"bSearchable\": true},\r\n                {\"sTitle\": \"Precio (S/.)\" , \"bSearchable\": false, 'sWidth': '100px'},\r\n                {\"sTitle\": \"Status\", \"bSortable\" : false, \"bSearchable\": true},\r\n            ],\r\n            actions\t:   \t[\r\n                ['status',   {\r\n                    0 : { txt : 'salida' , cls : 'btn-danger', dis : false},\r\n                    1 : { txt : 'disponible' ,  cls : 'btn-success', dis : false},\r\n                    2 : { txt : 'vendido' ,  cls : 'bgm-teal', dis : false},\r\n                    3 : { txt : 'reservado' ,  cls : 'bgm-purple', dis : false}\r\n                }\r\n                ]\r\n            ],\r\n            data  \t: \t['date','cod','name','provider','size','color','types','precio','status'],\r\n            configStatus : 'status'\r\n        };\r\n\r\n        $scope.list = function(s) {\r\n            $scope.updateList = true;\r\n            var obj = { params: {}};\r\n            if(typeof s !== 'undefined')\r\n                obj.params.search = s;\r\n            petition.get('api/auxproduct', obj)\r\n                .then(function(data){\r\n                    $scope.tableData = data.products;\r\n                    $('#table').AJQtable('view', $scope, $compile);\r\n                    $scope.updateList = false;\r\n                }, function(error){\r\n                    console.log(error);\r\n                    toastr.error('Ups ocurrio un problema: ' + error.data.message);\r\n                    $scope.updateList = false;\r\n                });\r\n        };\r\n\r\n        // End events\r\n\r\n        angular.element(document).ready(function(){\r\n            util.resetTable($scope,$compile);\r\n            $scope.list();\r\n        });\r\n    }]);"],"sourceRoot":"/source/"}